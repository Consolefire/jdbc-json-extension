<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.consolefire</groupId>
		<artifactId>jdbc-json-extension</artifactId>
		<version>1.5.0-SNAPSHOT</version>
	</parent>
	<artifactId>jdbc-json-extension-application</artifactId>
	<name>ConsoleFire > JDBC JSON Extension - Application</name>
	<packaging>pom</packaging>

	<properties>
		<c3p0.version>0.9.5.4</c3p0.version>
		<frontend.maven.plugin.version>1.7.6</frontend.maven.plugin.version>

		<docker.repo.name>consolefire</docker.repo.name>

	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<!-- Source: https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-build-systems.html#using-boot-maven-without-a-parent -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jdbc-json-extension-common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jdbc-json-extension-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>${c3p0.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-spring-web</artifactId>
			<version>${swagger2.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger2.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger2.version}</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.28.0</version>
					<dependencies>
						<dependency>
							<groupId>io.fabric8</groupId>
							<artifactId>run-java-sh</artifactId>
							<version>1.2.2</version>
						</dependency>
					</dependencies>

					<executions>
						<execution>
							<id>image-build</id>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
							<configuration>
								<useColor>true</useColor>
								<registry>docker.io</registry>
								<verbose>true</verbose>
								<images>
									<image>
										<alias>${project.artifactId}</alias>
										<name>${docker.repo.name}/${docker.image.name}:${docker.image.tag}</name>
										<build>
											<from>java:8</from>
											<dockerFileDir>${CONFIG_ROOT}/docker/</dockerFileDir>
											<dockerFile>Dockerfile</dockerFile>
											<filter>@{*}</filter>
											<env>
												<JAVA_OPTS>-Djava.security.egd=file:/dev/./urandom</JAVA_OPTS>
											</env>
											<assembly>
												<basedir>/</basedir>
												<descriptor>${CONFIG_ROOT}/docker/assembly.xml</descriptor>
											</assembly>
										</build>
									</image>
								</images>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<configuration>
					<locales>en,fr</locales>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version>
				<configuration>
					<argLine>-Xmx1024m </argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>all</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>jdbc-json-extension-service</module>
				<module>jdbc-json-extension-api</module>
				<module>jdbc-json-extension-webapp</module>
			</modules>
		</profile>


		<profile>
			<id>docker</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<docker.image.tag>${project.version}</docker.image.tag>
				<container.basedir>/usr/share/consolefire</container.basedir>
			</properties>
			<modules>
				<module>jdbc-json-extension-api</module>
				<module>jdbc-json-extension-webapp</module>
			</modules>
		</profile>
		
		<profile>
			<id>webapp</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<modules>
				<module>jdbc-json-extension-service</module>
				<module>jdbc-json-extension-webapp</module>
			</modules>

		</profile>
		
		<profile>
			<id>api</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<modules>
				<module>jdbc-json-extension-service</module>
				<module>jdbc-json-extension-api</module>
			</modules>

		</profile>
	</profiles>


</project>
